---
import { Image } from 'astro:assets';
import { getEntry, type CollectionEntry } from 'astro:content';
import { getNavLinks } from '../lib/navlink';
import type { NavLink } from '../lib/navlink';
import Grained from '../components/ui/grained.astro';

// Fetch the single entry from the 'footer' data collection
// Note: If type errors persist after this edit, try restarting the Astro dev server.
const footerEntry = await getEntry('footer', 'footer');
// Handle case where entry might not be found
if (!footerEntry) {
  throw new Error("Footer content entry ('src/content/footer/footer.json') not found. Check if the file exists and the collection is configured correctly in src/content/config.ts.");
}

// Type assertion might be needed if TS still struggles after server restart
// const { salonInfo, socialMedia } = footerEntry.data as CollectionEntry<'footer'>['data']; 
const { salonInfo, socialMedia } = footerEntry.data;
const currentYear = new Date().getFullYear();
// get navlink from navlink.ts
const navLinks = await getNavLinks(Astro.url.pathname);
---

<footer id="footer-container" class="relative dark:bg-gray-800 text-gray-700 dark:text-gray-300 py-24 mt-12 grayscale-100 brightness-110 bg-[url(/bg/Flooring_Grained.webp)] overflow-hidden">
  <Grained id="footer-noise" opacity={0.5} density={2} speed={20} color="#fff" blendMode="soft-light" className="z-0" transition:persist/>
  <div class="container relative mx-auto px-8 grid grid-cols-1 md:grid-cols-3 gap-8 text-center md:text-left">
    
    <!-- Salon Information -->
    <div id="salon-info">
      <div class="flex flex-row items-center gap-4">
        <Image src="/logo/Cui-logo-grey.svg" alt="Logo" width="80" height="80" class="inline-block transition-all duration-300" id="nav-logo" />
        <Image src="/logo/cui-logo-zh.svg" alt="Logo" width="30" height="40" class="inline-block transition-all duration-300" id="nav-logo" />
      </div >
      <!-- <h3 class="text-sm font-soligant font-semibold mb-2">{salonInfo.name}</h3> -->
      <p class="text-sm mr-24 mb-4 tracking-widest text-pretty">{footerEntry.data.statement.description}</p>
      <p class="text-sm">{salonInfo.address}</p>
      <p class="text-sm">{salonInfo.city}</p>
      <p class="mt-4 text-sm no-underline">
        <span class="font-bold">
        電話:
        </span> 
        {salonInfo.phone}
      </p>
    </div>

    <!-- Social Media Links -->
    <div class="mt-3">
      <h3 class="text-lg font-semibold mb-2">追蹤我們</h3>
      <div class="flex justify-center md:justify-start space-x-4">
        {/* Explicitly type the 'social' parameter */} 
        {socialMedia.map((social: CollectionEntry<'footer'>['data']['socialMedia'][number]) => (
          <a href={social.url} class="hover:text-pink-500 dark:hover:text-pink-400" aria-label={social.name}>
            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24"><path d={social.iconPath}></path></svg>
          </a>
        ))}
        <!-- Add more social links as needed -->
      </div>
    </div>
    <!-- pages link -->
    <div class="mt-4">
      <h3 class="text-lg font-semibold mb-2">頁面連結</h3>
      <div class="flex justify-center md:justify-start space-x-4"></div>
      {navLinks
        .filter((link: NavLink) => link.visibility === 'all' || link.visibility === 'desktop')
        .map((link: NavLink) => (
          <a
            href={link.href}
            class={`flex flex-col font-light pl-1 hover:font-bold hover:text-gray-800 transition-all duration-300 ease-out relative pb-2 ${
              link.isActive ? 'font-semibold' : ''
            } ${
              link.href === '/booking' ? 'text-gray-700 hover:text-gray-800' : ''
            }`}
          >
            {link.text}
          </a>
        ))}
    </div>

    <!-- Copyright -->
    <div class="md:col-span-3 mt-8 md:mt-0 border-t border-gray-300 dark:border-gray-700 pt-4 text-center text-sm">
      <p>&copy; {currentYear} {salonInfo.name}. All rights reserved.</p>
    </div>
  </div>
</footer>
<script>
  import { animate, stagger, scroll } from "motion";
    // 確保在 DOM 載入後執行
    document.addEventListener('DOMContentLoaded', () => {

    // 檢查元素是否存在

    // 如果找不到元素，則停止執行
    // 創建動畫
    const footercontainer = document.querySelector("#footer-container") as HTMLElement | null;
    const salonInfo = document.querySelector("#salon-info") as HTMLElement | null;

    if (footercontainer && salonInfo) {
      scroll(
        animate(
          salonInfo,
          { opacity: [0.01, 1], y: [20, 0] },
          { 
            type: "spring", 
            duration: 1, 
            bounce: 0.3, 
          }
        ),
        {
          target: footercontainer,
          offset: ["start 0.75", "end end"],
        }
      );
    } else {
      console.warn("Footer container or salon info element not found.");
    }
  }
);    
</script>